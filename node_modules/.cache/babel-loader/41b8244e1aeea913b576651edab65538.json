{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _Panel = require('./Panel');\n\nvar _Panel2 = _interopRequireDefault(_Panel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar AsyncPanelComponent = function (_React$PureComponent) {\n  _inherits(AsyncPanelComponent, _React$PureComponent);\n\n  function AsyncPanelComponent(props) {\n    _classCallCheck(this, AsyncPanelComponent);\n\n    var _this = _possibleConstructorReturn(this, (AsyncPanelComponent.__proto__ || Object.getPrototypeOf(AsyncPanelComponent)).call(this, props));\n\n    _this.loadPanel = _this.loadPanel.bind(_this);\n    _this.cacheData = undefined;\n    _this.state = {\n      isLoading: false,\n      data: undefined\n    };\n    return _this;\n  }\n\n  _createClass(AsyncPanelComponent, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.active) this.loadPanel();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.active) this.loadPanel();\n    }\n  }, {\n    key: 'loadPanel',\n    value: function loadPanel() {\n      var _this2 = this;\n\n      var _props = this.props,\n          loadContent = _props.loadContent,\n          cache = _props.cache;\n\n      if (cache && this.cacheData) {\n        this.setState({\n          isLoading: false,\n          data: this.cacheData\n        });\n        return;\n      }\n\n      var callback = function callback(err, data) {\n        if (err) {\n          console.log('React-Tabtab async panel error:', err);\n        }\n\n        if (cache) {\n          _this2.cacheData = data;\n        }\n\n        _this2.setState({\n          isLoading: false,\n          data: data\n        });\n      };\n\n      var promise = loadContent(callback);\n\n      if (promise) {\n        promise.then(function (data) {\n          return callback(null, data);\n        }, function (err) {\n          return callback(err);\n        });\n      }\n\n      if (!this.state.isLoading) {\n        this.setState({\n          isLoading: true\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          render = _props2.render,\n          renderLoading = _props2.renderLoading,\n          CustomPanelStyle = _props2.CustomPanelStyle,\n          active = _props2.active,\n          index = _props2.index;\n      var _state = this.state,\n          isLoading = _state.isLoading,\n          data = _state.data;\n      var content = void 0;\n\n      if (isLoading) {\n        content = renderLoading();\n      } else {\n        content = render(data);\n      }\n\n      return React.createElement(_Panel2.default, {\n        CustomPanelStyle: CustomPanelStyle,\n        active: active,\n        index: index\n      }, content);\n    }\n  }]);\n\n  return AsyncPanelComponent;\n}(React.PureComponent);\n\nAsyncPanelComponent.defaultProps = {\n  cache: true\n};\nexports.default = AsyncPanelComponent;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}